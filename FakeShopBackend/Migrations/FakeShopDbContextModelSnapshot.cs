// <auto-generated />
using FakeShopBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FakeShopBackend.Migrations
{
    [DbContext(typeof(FakeShopDbContext))]
    partial class FakeShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FakeShopBackend.Models.FakeShopModel", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("category");

                    b.Property<string>("description");

                    b.Property<string>("image");

                    b.Property<float>("price");

                    b.Property<string>("title");

                    b.HasKey("product_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("FakeShopBackend.Models.Rating", b =>
                {
                    b.Property<float>("rate");

                    b.Property<int>("product_id");

                    b.Property<int>("count");

                    b.HasKey("rate", "product_id");

                    b.HasIndex("product_id")
                        .IsUnique();

                    b.ToTable("products_rating");
                });

            modelBuilder.Entity("FakeShopBackend.Models.Rating", b =>
                {
                    b.HasOne("FakeShopBackend.Models.FakeShopModel")
                        .WithOne("rating")
                        .HasForeignKey("FakeShopBackend.Models.Rating", "product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
